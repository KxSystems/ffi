jobs:
  include:
  - dist: xenial
    os: linux
  - dist: bionic
    os: linux
  - os: osx
  - os: windows
os: linux
dist: xenial
language: c
compiler: gcc

before_install:
  # Set global flags
  - export FILE_ROOT=ffikdb
  - export TESTS="False"
  # Install dependencies
  # Remove libc6-dev libc6-dev-i386 for trial
  - if [ $TRAVIS_OS_NAME = linux ]; then
      sudo apt-get install libffi-dev libffi-dev:i386
    fi
  # Set OS directory and license location
  - if [[ $TRAVIS_OS_NAME == linux ]]; then
      QLIBDIR=l64
      QLIC_KC=$L64
    elif [[ $TRAVIS_OS_NAME == windows ]]; then
      QLIBDIR=w64
      QLIC_KC=$W64
    elif [[ $TRAVIS_OS_NAME == osx ]]; then
      QLIBDIR=m64
      QLIC_KC=$M64
    else
      echo "Unsupported OS."
      exit 1
    fi
  - export QLIBDIR
  - export QLIC_KC

  # Set QHOME
  - mkdir -p qhome/${QLIBDIR}
  - export QHOME=$(pwd)/qhome
  - export PATH=${PATH}:${QHOME}/${QLIBDIR}

  # Prepare Test
  - if [[ $TESTS == True && "x$OD" != "x" && "x$QLIC_KC" != "x" ]]; then
      curl -o qhome/q.zip -L $OD
      unzip -d qhome qhome/q.zip
      echo -n $QLIC_KC | base64 --decode > qhome/kc.lic
    else
      echo "No kdb+, no tests"
    fi
  
  # Set Release Package
  - if [[ $TRAVIS_OS_NAME == windows ]]; then
      export FILE_TAIL=".zip"
    else
      export FILE_TAIL=".tgz"
    fi
  - export FILE_NAME=${FILE_ROOT}-${TRAVIS_OS_NAME}-${TRAVIS_BRANCH}.${FILE_TAIL}

  # Build
  - mkdir build
  - if [[ $TRAVIS_OS_NAME == "windows" ]]; then
      cmake -G "Visual Studio 15 2017 Win64" ..
      cmake --build . --config Release
      cmake --build . --config Release --target install
      cd ../
    else
      cmake -DCMAKE_BUILD_TYPE=Release ..
      make
      make install
      cd ../
    fi

script:
  # Test
  - if [[ $TESTS == True && "x$OD" != "x" && "x$QLIC_KC" != "x" ]]; then
      curl -o test.q -L https://github.com/KxSystems/hdf5/raw/master/test.q
      q test.q tests/ -q
    fi
  # Build Package
  - if [[ $TRAVIS_OS_NAME == windows ]]; then
      7z a -tzip -r ${FILE_NAME} build/${FILE_ROOT}
    else
      tar czf ${FILE_NAME} build/${FILE_ROOT}
    fi

deploy:
  provider: releases
  tokrn: ${GITHUB_APIKEY}
  file: ${FILE_NAME}
  on:
    tags: true
    condition: $TRAVIS_OS_NAME == windows || $TRAVIS_OS_NAME == osx || ($TRAVIS_OS_NAME == linux && $TRAVIS_DIST == xenial)
  skip_cleanup: true